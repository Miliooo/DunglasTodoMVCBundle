// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/view'], function(View) {
  'use strict';
  var HeaderView, _ref;
  return HeaderView = (function(_super) {
    __extends(HeaderView, _super);

    function HeaderView() {
      this.createOnEnter = __bind(this.createOnEnter, this);
      _ref = HeaderView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HeaderView.prototype.el = '#header';

    HeaderView.prototype.initialize = function() {
      HeaderView.__super__.initialize.apply(this, arguments);
      return this.delegate('keypress', '#new-todo', this.createOnEnter);
    };

    HeaderView.prototype.createOnEnter = function(event) {
      var ENTER_KEY, title;
      ENTER_KEY = 13;
      title = $(event.currentTarget).val().trim();
      if (event.keyCode !== ENTER_KEY || !title) {
        return;
      }
      this.collection.create({
        title: title
      });
      return this.$('#new-todo').val('');
    };

    return HeaderView;

  })(View);
});
