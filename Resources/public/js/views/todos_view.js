// Generated by CoffeeScript 1.6.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/collection_view', 'views/todo_view'], function(CollectionView, TodoView) {
  'use strict';
  var TodosView, _ref;
  return TodosView = (function(_super) {
    __extends(TodosView, _super);

    function TodosView() {
      this.toggleCompleted = __bind(this.toggleCompleted, this);
      this.renderCheckbox = __bind(this.renderCheckbox, this);
      this.render = __bind(this.render, this);
      _ref = TodosView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TodosView.prototype.el = '#main';

    TodosView.prototype.listSelector = '#todo-list';

    TodosView.prototype.itemView = TodoView;

    TodosView.prototype.initialize = function() {
      TodosView.__super__.initialize.apply(this, arguments);
      this.subscribeEvent('todos:clear', this.clear);
      this.listenTo(this.collection, 'all', this.renderCheckbox);
      return this.delegate('click', '#toggle-all', this.toggleCompleted);
    };

    TodosView.prototype.render = function() {
      TodosView.__super__.render.apply(this, arguments);
      return this.renderCheckbox();
    };

    TodosView.prototype.renderCheckbox = function() {
      this.$('#toggle-all').prop('checked', this.collection.allAreCompleted());
      return this.$el.toggle(this.collection.length !== 0);
    };

    TodosView.prototype.toggleCompleted = function(event) {
      var isChecked;
      isChecked = event.currentTarget.checked;
      return this.collection.each(function(todo) {
        return todo.save({
          completed: isChecked
        });
      });
    };

    TodosView.prototype.clear = function() {
      return this.collection.getCompleted().forEach(function(model) {
        return model.destroy();
      });
    };

    return TodosView;

  })(CollectionView);
});
